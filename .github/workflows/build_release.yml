name: release

on:
  push:
    tags:
      - '*'
env:
  CONFIGURATION: Release

jobs:
  extract_version:
    name: extract_version
    runs-on: ubuntu-latest
    steps:
      - name: version
        id: version
        run: echo ::set-output name=version::${GITHUB_REF/refs\/tags\//}

      - name: echo version
        run: echo "version=${{steps.version.outputs.version}}"
      - shell: bash
        run: |
           echo "${{steps.version.outputs.version}}" > version.txt

      - name: Upload version
        uses: actions/upload-artifact@v1
        with:
          name: version
          path: version.txt

  build_release:
    name: build_release
    needs: extract_version
    runs-on: windows-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      
      - name: download version
        uses: actions/download-artifact@v1
        with:
          name: version

      - name: version
        id: version
        shell: bash
        run: |
          value=`cat version/version.txt`
          echo ::set-output name=version::$value

      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1

      - name: setup vstest path
        uses: darenm/Setup-VSTest@v1

      - name: restore dependencies
        run: nuget restore
        working-directory: ./src/net48

      - name: build cms 11
        run: msbuild /property:Configuration=${{env.CONFIGURATION}}
        working-directory: ./src/net48

      - name: test with latest CMS version
        run: vstest.console.exe ./src/net48/Lorem.Testing.Optimizely.CMS.Test/bin/${{env.CONFIGURATION}}/net48/Lorem.Testing.Optimizely.CMS.Test.dll /TestAdapterPath:./src/net48/Lorem.Testing.Optimizely.CMS.Test/bin/${{env.CONFIGURATION}}/net48/

      - name: test with minimum CMS version
        run: vstest.console.exe ./src/net48/Lorem.Testing.Optimizely.CMS.Test.Min/bin/${{env.CONFIGURATION}}/net471/Lorem.Testing.Optimizely.CMS.Test.Min.dll /TestAdapterPath:./src/net48/Lorem.Testing.Optimizely.CMS.Test.Min/bin/${{env.CONFIGURATION}}/net471/
        
      - name: create nuget
        run: nuget pack ./src/Lorem.Testing.Optimizely.CMS.csproj.nuspec -version ${{steps.version.outputs.version}}

      - name: upload nuget
        uses: actions/upload-artifact@v1
        with:
          name: nuget
          path: '*.nupkg'