name: release

on:
  push:
    tags:
      - '*'
env:
  CONFIGURATION: Release

jobs:
  extract_version:
    name: extract_version
    runs-on: ubuntu-latest
    steps:
      - name: get version from tag
        id: version
        run: echo ::set-output name=version::${GITHUB_REF/refs\/tags\//}

      - name: echo version
        run: echo "version=${{steps.version.outputs.version}}"

      - name: save version in file
        shell: bash
        run: |
           echo "${{steps.version.outputs.version}}" > version.txt

      - name: upload version as artifact
        uses: actions/upload-artifact@v1
        with:
          name: version
          path: version.txt

  build_release:
    name: build_release
    needs: extract_version
    runs-on: windows-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      
      - name: download version artifact
        uses: actions/download-artifact@v1
        with:
          name: version

      - name: get version from file
        id: version
        shell: bash
        run: |
          value=`cat version/version.txt`
          echo ::set-output name=version::$value

      - name: setup msbuild
        uses: microsoft/setup-msbuild@v1

      - name: setup vstest path
        uses: darenm/Setup-VSTest@v1

      - name: restore dependencies
        run: nuget restore
        working-directory: ./src/net48

      - name: build for cms 11
        run: msbuild /property:Configuration=${{env.CONFIGURATION}} /p:Version=${{steps.version.outputs.version}} -m
        working-directory: ./src/net48

      - name: create Lorem.Testing.Optimizely.CMS nuget
        run: nuget pack ./src/Lorem.Testing.Optimizely.CMS.nuspec -version ${{steps.version.outputs.version}}

      - name: create Lorem.Testing.Optimizely.SearchAndNavigation nuget
        run: nuget pack ./src/Lorem.Testing.Optimizely.SearchAndNavigation.nuspec -version ${{steps.version.outputs.version}}

      - name: add github nuget registry as nuget source
        run: dotnet nuget add source --username loremipsumdonec --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/loremipsumdonec/index.json"

      - name: publish nuget Lorem.Testing.Optimizely.CMS to github nuget registry
        run: dotnet nuget push "Lorem.Testing.Optimizely.CMS.${{steps.version.outputs.version}}.nupkg" --api-key ${{ secrets.PUBLISH_NUGET_TOKEN }} --source "github"

      - name: publish nuget Lorem.Testing.Optimizely.SearchAndNavigation to github nuget registry
        run: dotnet nuget push "Lorem.Testing.Optimizely.SearchAndNavigation.${{steps.version.outputs.version}}.nupkg" --api-key ${{ secrets.PUBLISH_NUGET_TOKEN }} --source "github"