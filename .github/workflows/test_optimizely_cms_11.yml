name: optimizely cms 11

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'src/net48/**.*'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/net48/**.*'

defaults:
  run:
    working-directory: ./src/net48

env:
  CONFIGURATION: Release

jobs:

  analyze:
    runs-on: windows-latest

    steps:
      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
        
      - name: setup msbuild
        uses: microsoft/setup-msbuild@v1

      - name: cache nuget packages
        uses: actions/cache@v1
        with:
          path: .\packages
          key: ${{ runner.os }}-nuget
          restore-keys: ${{ runner.os }}-nuget

      - name: restore dependencies
        run: nuget restore

      - name: build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"loremipsumdonec_optimizely-testframework" /o:"loremipsumdonec" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          msbuild .\Lorem.Test.Framework.Optimizely.CMS\Lorem.Test.Framework.Optimizely.CMS.csproj /property:Configuration=${{env.CONFIGURATION}}
          msbuild .\Lorem.Test.Framework.Optimizely.SearchAndNavigation\Lorem.Test.Framework.Optimizely.SearchAndNavigation.csproj /property:Configuration=${{env.CONFIGURATION}}
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  test:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: setup msbuild
      uses: microsoft/setup-msbuild@v1

    - name: setup vstest path
      uses: darenm/Setup-VSTest@v1

    - name: cache nuget packages
      uses: actions/cache@v1
      with:
        path: .\packages
        key: ${{ runner.os }}-nuget
        restore-keys: ${{ runner.os }}-nuget

    - name: restore dependencies
      run: nuget restore

    - name: build for cms 11
      run: msbuild /property:Configuration=${{env.CONFIGURATION}} -m

    - name: test with latest CMS version
      run: vstest.console.exe Lorem.Test.Framework.Optimizely.CMS.Test\bin\${{env.CONFIGURATION}}\net48\Lorem.Test.Framework.Optimizely.CMS.Test.dll /TestCaseFilter:"verification=required" /TestAdapterPath:Lorem.Test.Framework.Optimizely.CMS.Test\bin\${{env.CONFIGURATION}}\net48\

    - name: test with minimum CMS version
      run: vstest.console.exe Lorem.Test.Framework.Optimizely.CMS.Test.Min\bin\${{env.CONFIGURATION}}\net471\Lorem.Test.Framework.Optimizely.CMS.Test.Min.dll /TestCaseFilter:"verification=required" /TestAdapterPath:Lorem.Test.Framework.Optimizely.CMS.Test.Min\bin\${{env.CONFIGURATION}}\net471\

    - name: test when missing configuration
      run: vstest.console.exe Lorem.Test.Framework.Optimizely.CMS.Test.Invalid\bin\${{env.CONFIGURATION}}\net48\Lorem.Test.Framework.Optimizely.CMS.Test.Invalid.dll /TestCaseFilter:"verification=required" /TestAdapterPath:Lorem.Test.Framework.Optimizely.CMS.Test.Invalid\bin\${{env.CONFIGURATION}}\net48\
    
    - name: test with latest Search and Navigation version
      run: vstest.console.exe Lorem.Test.Framework.Optimizely.SearchAndNavigation.Test\bin\${{env.CONFIGURATION}}\net48\Lorem.Test.Framework.Optimizely.SearchAndNavigation.Test.dll /TestCaseFilter:"verification=required" /TestAdapterPath:Lorem.Test.Framework.Optimizely.SearchAndNavigation.Test\bin\${{env.CONFIGURATION}}\net48\

    - name: test with minimum Search and Navigation version
      run: vstest.console.exe Lorem.Test.Framework.Optimizely.SearchAndNavigation.Test.Min\bin\${{env.CONFIGURATION}}\net471\Lorem.Test.Framework.Optimizely.SearchAndNavigation.Test.Min.dll /TestCaseFilter:"verification=required" /TestAdapterPath:Lorem.Test.Framework.Optimizely.SearchAndNavigation.Test.Min\bin\${{env.CONFIGURATION}}\net471\
